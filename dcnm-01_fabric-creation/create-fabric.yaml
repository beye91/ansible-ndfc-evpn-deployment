---

- hosts: dcnm_controllers
  gather_facts: false

  tasks:
    - name: Load variables
      ansible.builtin.include_vars:
        file: fabric_settings.yaml
        name: fabric_settings
      tags:
        - create_fabric

    - name: Create template policy using Ansible
      cisco.dcnm.dcnm_rest:
        method: POST
        path: /appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics
        json_data: '{{  fabric_settings | to_json  }}'
      tags:
        - create_fabric

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: /tmp/ansible_create_fabric
        state: directory
      tags:
        - get_devices

    - name: Get POAP devices
      cisco.dcnm.dcnm_rest:
        method: GET
        path: /appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/Ansible_Fabric/inventory/poap
      register: result
      tags:
        - get_devices
    - debug: var=result
      tags:
        - get_devices

    - name: Modify output
      ansible.builtin.set_fact:
        get_devices: "{{ result.response.DATA }}"
      tags:
        - get_devices

    - name: Copy config
      local_action: 
        copy content="{{ get_devices }}" 
        dest=/tmp/ansible_create_fabric/get_devices.output
      tags:
        - get_devices

    - name: Change variables
      ansible.builtin.script:
        cmd: change_variables.sh
      tags:
        - get_devices

#    - name: Loading variables
#        ansible.builtin.include_vars: myvars.yaml
#
#    - name: Loading variables
#      set_fact:
#        myvar: "{{ result.stdout | from_yaml | to_json }}"

    - name: Load variables
      ansible.builtin.include_vars:
        file: iventory.yaml
        name: inventory
      tags:
        - assign_devices

    - name: Assign switch to the fabric using POAP
      cisco.dcnm.dcnm_rest:
        method: POST
        path: /appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/Ansible_Fabric/inventory/poap
        json_data: '{{  fabric_settings | to_json  }}'
      tags:
        - assign_devices

    - name: Save Config for the fabric
      cisco.dcnm.dcnm_rest:
        method: POST
        path: /appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/Ansible_Fabric/config-save
        json_data: {}
      tags:
        - deploy_devices

    - name: Deploy switch config
      cisco.dcnm.dcnm_rest:
        method: POST
        path: /appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/Ansible_Fabric/config-deploy/9B7HCN7Q2UX,9VKJTW1HWF2,986OYK0ICB2,98OHWTR4GU5?forceShowRun=false
        json_data: {}
      tags:
        - deploy_devices